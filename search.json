[{"title":"项目搭建","url":"/2023/04/25/Arduino/","content":"\n  \n    \n      1、说在前面\n\n    \n    \n        \n    1、需求描述\n\n  \n\n  \n    通过识别指纹开发板控制舵机模拟开门的目的。\n\n  \n\n  \n    温湿度烟雾和指纹模块都可以实现让舵机转动。\n\n  \n\n  \n    同时温湿度和烟雾传感器还能控制蜂鸣器。    \n\n  \n\n  \n    检测火焰使风扇转动实现灭火的功能          \n\n  \n\n  \n    传感器：温湿度传感器、烟雾传感器、指纹模块、光感传感器、舵机、蜂鸣器、风扇灭火模块。\n\n  \n\n\n\n  \n    2、实现流程\n\n  \n\n  \n    功能一:指纹模块+舵机                     \n\n  \n\n  \n    功能二:温湿度传感器+舵机+蜂鸣器          \n\n  \n\n  \n    功能三:烟雾传感器+舵机+蜂鸣器          \n\n  \n\n  \n    功能四:光感传感器               \n\n  \n\n  \n    功能五:风扇模块                \n\n  \n准备材料。开始实验。\n\n    \n  \n\n\n\n  \n    \n      2、准备材料\n\n    \n    \n      使用的材料是：\n  \n    指纹识别模块（带USB转TTL板）\n\n  \n          \n  \n    舵机（度数可调）\n\n  \n          \n  \n    温湿度传感器\n\n  \n          \n  \n    光感传感器\n\n  \n          \n  \n    烟雾传感器\n\n  \n          \n  \n    蜂鸣器\n\n  \n          \n  \n    风扇模块\n\n  \n          \n  \n    LED灯\n\n       \n          \n  \n    若干根合适长度的杜邦线\n\n     \n    \n  \n\n\n\n  \n    \n      3、指纹调试\n\n    \n    \n      使用USB转TTL板连接指纹模块和电脑。  \n  \n    1、Vi模块电源正输入端（红）——TTL板3.3V(注意)\n\n  \n\n  \n    2、Tx串行数据输出（黄）——TTL板Rx\n\n  \n\n  \n    3、Rx串行数据输入（白）——TTL板Tx\n\n  \n\n  \n    4、GND信号地（黑）——TTL板GND\n\n  \n\n  \n    5、打开“设备管理器”查看并记录TTL板的端口号。\n\n  \n\n  \n    6、运行指纹程序，打开该端口的指纹模块。\n\n  \n\n  \n    7、录入指纹速度慢可以取消勾选“显示图像”。（建议录入指纹时，波特率选择57600）。\n\n  \n\n  \n    8、录入指纹完成后拔掉TTL板，使用杜邦线连接开发板指纹模块和舵机。\n\n  \n    \n  \n\n\n  \n    \n      4、线路连接\n\n    \n    \n      准备合适长度的杜邦线若干。\n  \n    1、舵机连接步骤：\n\n  \n\n  \n    舵机（红色） 线为电源线 —— 开发板5V接口（供电）\n\n  \n\n  \n    舵机（棕黑色）线为地线 —— 开发板GND接口（地线）\n\n  \n\n  \n    舵机（橙黄色）线为信号线 —— 开发板9号口（信号）\n\n  \n\n  \n    2、指纹模块连接步骤：\n\n  \n\n  \n    指纹模块（红色绿色）线延长接成1根线 —— 开发板3.3V口（供电）\n\n  \n\n  \n    指纹模块（黑色）线 —— 开发板GND接口（地线）\n\n  \n\n  \n    指纹模块（黄色）线 —— 开发板数字2号口（串行数据输出）\n\n  \n\n  \n    指纹模块（白色）线 —— 开发板数字3号口（串行数据输入）\n\n  \n\n  \n    指纹模块（蓝色）线 —— 开发板数字4号口（感应信号输出）\n\n  \n\n  \n    3、温湿度模块连接步骤：\n\n  \n\n  \n    温湿度模块S引脚 —— 开发板模拟口\n\n  \n\n  \n    温湿度模块VCC引脚 —— 开发板VCC引脚\n\n  \n\n  \n    温湿度模块GND引脚 —— 开发板GND引脚\n\n  \n\n  \n    4、光感模块连接步骤：\n\n  \n\n  \n    光感模块S引脚 —— 开发板模拟口\n\n  \n\n  \n    光感模块VCC引脚 —— 开发板VCC引脚\n\n  \n\n  \n    光感模块GND引脚 —— 开发板GND引脚\n\n  \n\n  \n    5、烟雾模块连接步骤：\n\n  \n\n  \n    烟雾模块S引脚 —— 开发板模拟口\n\n  \n\n  \n    烟雾模块VCC引脚 —— 开发板VCC引脚\n\n  \n\n  \n    烟雾模块GND引脚 —— 开发板GND引脚\n\n  \n\n  \n    6、蜂鸣器模块连接步骤：\n\n  \n\n  \n    蜂鸣器模块数字引脚 —— 开发板数字引脚\n\n  \n\n  \n    蜂鸣器模块GND引脚 —— 开发板GND引脚\n\n  \n\n  \n    7、风扇模块连接步骤：\n\n  \n\n  \n    风扇模块GND —— 开发板GND\n\n  \n\n  \n    风扇模块VCC —— 开发板VCC\n\n  \n\n  \n    风扇模块数字引脚A —— 开发板数字引脚7\n\n  \n\n  \n    风扇模块数字引脚B —— 开发板数字引脚8\n\n  \n\n  \n    风扇模块火焰模拟口 —— 开发板模拟口\n\n  \n\n  \n    风扇模块火焰模拟VCC —— 开发板VCC\n\n  \n\n  \n    风扇模块火焰模拟GND —— 开发板GND\n\n  \n    \n  \n\n\n  \n    \n      5、代码实现\n\n    \n    \n      \n  1、把开发板连接电脑，选择开发板的端口（工具→端口→选择端口），复制以下代码进Arduino程序。\n\n\n\n\n  2、如果缺少库文件，就在“工具→管理库”里面搜索添加提示缺失的库即可。\n\n\n\n\n  3、左上角√图标编译验证没问题，就可以上传→至开发板内了。\n\n\n\n\n  4、源代码实现 (代码还须根据实际进行修改和调整)\n\n\n    \n  \n\n\n#include &lt;DFRobot_DHT11.h&gt;DFRobot_DHT11 DHT;#define DHT11_PIN A2                  // 对应的是A0引脚#include &lt;Adafruit_Fingerprint.h&gt;  //声明调用Adafruit_Fingerprint.h库  指纹#include &lt;Servo.h&gt;    // 声明调用Servo.h库  舵机Servo myservo;        // 创建一个舵机对象int pos = 0;          // 变量pos用来存储舵机位置const int servoDelay = 15;const int servoStop  = 2000;const int lowPowerRate = 1;const int checkDelay = 1000;const int debug = 0;int beep = 6;//定义数字口6控制蜂鸣器int red = 5;//定义数字口5/*光感*/#define lightR A0#define LED 13/*光感*/SoftwareSerial mySerial(2, 3);//黄色串行数据输出&amp;&amp;白色串行数据输入接口（可修改范围A0~A5，2~13）Adafruit_Fingerprint finger = Adafruit_Fingerprint(&amp;mySerial);void setup()&#123;  pinMode(7, OUTPUT);  pinMode(8, OUTPUT);  pinMode(LED,OUTPUT);    //设置连接小灯的引脚为输出模式  pinMode(lightR,INPUT);  pinMode(beep,OUTPUT);//设置数字6引脚为输出模式   pinMode(red,OUTPUT);//设置数字6引脚为输出模式   myservo.attach(9); //舵机信号端口（可修改范围A0~A5，2~13）  myservo.write(0);  Serial.begin(9600);  Serial.println(&quot;Demo Start&quot;);  while (!Serial);  // For Yun/Leo/Micro/Zero/...  delay(100);  Serial.println(&quot;\\n\\nAdafruit finger detect test&quot;);  finger.begin(57600);//设置传感器串行端口的数据速率  delay(5);  if (finger.verifyPassword()) &#123;    Serial.println(&quot;Found fingerprint sensor!&quot;);  &#125; else &#123;    Serial.println(&quot;Did not find fingerprint sensor :(&quot;);    while (1) &#123; delay(1); &#125;  &#125;  Serial.println(F(&quot;Reading sensor parameters&quot;));  finger.getParameters();  Serial.print(F(&quot;Status: 0x&quot;)); Serial.println(finger.status_reg, HEX);  Serial.print(F(&quot;Sys ID: 0x&quot;)); Serial.println(finger.system_id, HEX);  Serial.print(F(&quot;Capacity: &quot;)); Serial.println(finger.capacity);  Serial.print(F(&quot;Security level: &quot;)); Serial.println(finger.security_level);  Serial.print(F(&quot;Device address: &quot;)); Serial.println(finger.device_addr, HEX);  Serial.print(F(&quot;Packet len: &quot;)); Serial.println(finger.packet_len);  Serial.print(F(&quot;Baud rate: &quot;)); Serial.println(finger.baud_rate);  finger.getTemplateCount();  if (finger.templateCount == 0) &#123;    Serial.print(&quot;Sensor doesn&#x27;t contain any fingerprint data. Please run the &#x27;enroll&#x27; example.&quot;);  &#125;  else &#123;    Serial.println(&quot;Waiting for valid finger...&quot;);    Serial.print(&quot;Sensor contains &quot;); Serial.print(finger.templateCount); Serial.println(&quot; templates&quot;);  &#125;&#125; void loop()                     // run over and over again&#123;  huoyanbaojing();  wenshiducaiji();  fengshan();  Serial.println(&quot;Voltage in 4&quot;);   Serial.println(digitalRead(4));  if(!lowPowerRate || digitalRead(4) == HIGH) &#123;    getFingerprintID();  &#125;  delay(checkDelay);            //don&#x27;t ned to run this at full speed.  guanggan();&#125; void openAndReset()&#123;  for(pos = 0; pos &lt; 90; pos += 1)&#123;    // 舵机从0°转到180°，每次增加1°              myservo.write(pos);       // 给舵机写入角度       delay(servoDelay);                    // 延时15ms让舵机转到指定位置  &#125;  delay(servoStop);  for(pos = 90; pos&gt;=1; pos-=1) &#123;    // 舵机从180°转回到0°，每次减小1°                                   myservo.write(pos);        // 写角度到舵机         delay(servoDelay);                 // 延时15ms让舵机转到指定位置  &#125;&#125; uint8_t getFingerprintID() &#123;  uint8_t p = finger.getImage();  switch (p) &#123;    case FINGERPRINT_OK:      Serial.println(&quot;Image taken&quot;);      break;    case FINGERPRINT_NOFINGER:      Serial.println(&quot;No finger detected&quot;);      return p;    case FINGERPRINT_PACKETRECIEVEERR:      Serial.println(&quot;Communication error&quot;);      return p;    case FINGERPRINT_IMAGEFAIL:      Serial.println(&quot;Imaging error&quot;);      return p;    default:      Serial.println(&quot;Unknown error&quot;);      return p;  &#125;   p = finger.image2Tz();  switch (p) &#123;    case FINGERPRINT_OK:      Serial.println(&quot;Image converted&quot;);      break;    case FINGERPRINT_IMAGEMESS:      Serial.println(&quot;Image too messy&quot;);      return p;    case FINGERPRINT_PACKETRECIEVEERR:      Serial.println(&quot;Communication error&quot;);      return p;    case FINGERPRINT_FEATUREFAIL:      Serial.println(&quot;Could not find fingerprint features&quot;);      return p;    case FINGERPRINT_INVALIDIMAGE:      Serial.println(&quot;Could not find fingerprint features&quot;);      return p;    default:      Serial.println(&quot;Unknown error&quot;);      return p;  &#125;  p = finger.fingerSearch();  if (p == FINGERPRINT_OK) &#123;    Serial.println(&quot;Found a print match!&quot;);    digitalWrite(beep,LOW);//关闭蜂鸣器  &#125; else if (p == FINGERPRINT_PACKETRECIEVEERR) &#123;    Serial.println(&quot;Communication error&quot;);    return p;  &#125; else if (p == FINGERPRINT_NOTFOUND) &#123;    digitalWrite(red,HIGH);//提示红灯    Serial.println(&quot;Did not find a match&quot;);    digitalWrite(beep,HIGH);//打开蜂鸣器    delay(1000);     digitalWrite(beep,LOW);//打开蜂鸣器    return p;  &#125; else &#123;    Serial.println(&quot;Unknown error&quot;);    return p;  &#125;  Serial.print(&quot;Found ID #&quot;);   Serial.print(finger.fingerID);  Serial.print(&quot; with confidence of &quot;);   Serial.println(finger.confidence);  openAndReset();  return finger.fingerID;&#125;int getFingerprintIDez() &#123;  uint8_t p = finger.getImage();  if (p != FINGERPRINT_OK)  return -1;   p = finger.image2Tz();  if (p != FINGERPRINT_OK)  return -1;   p = finger.fingerFastSearch();  if (p != FINGERPRINT_OK)  return -1;   // found a match!  Serial.print(&quot;Found ID #&quot;);   Serial.print(finger.fingerID);  Serial.print(&quot; with confidence of &quot;);   Serial.println(finger.confidence);  return finger.fingerID;&#125;//光感函数void guanggan()&#123;  int val=analogRead(lightR);  //读取模拟接口A0的值，也就是14号口，把值赋给val  Serial.println(&quot;光感模拟量值为：&quot;);  //显示字符串&quot;模拟量值为：&quot;  Serial.println(val);    //通过串口打印对应的val值，并且通过串口进行显示出来  delay(1000);//延时1秒  if(val&gt;100)//判断是否大于设定值   &#123;      digitalWrite(LED,HIGH);//点亮led      //digitalWrite(beep,LOW);//关闭蜂鸣器   &#125;else&#123;     digitalWrite(LED,LOW);//关闭led     //digitalWrite(beep,HIGH);//打开蜂鸣器    &#125;&#125;//可燃检测void huoyanbaojing()&#123;  int vall = analogRead(A1);//读取模拟14口的值   Serial.println(&quot;可燃模拟量值为：&quot;);  //显示字符串&quot;模拟量值为：&quot;  Serial.println(vall);    //读取模拟接口A0的值，并且通过串口进行显示出来  if(vall&gt;1000)//可以通过调节这个参数来改变火焰检测的阀值  &#123;     Serial.print(&quot;环境正常&quot;);    digitalWrite(red,LOW);//关闭提示灯    digitalWrite(beep,LOW);//关闭蜂鸣器  &#125;   else//否则   &#123;     Serial.print(&quot;环境异常&quot;);    digitalWrite(red,HIGH);//打开提示灯    digitalWrite(beep,HIGH);//打开蜂鸣器     openAndReset();    delay(1000);    digitalWrite(red,LOW);//关闭提示灯  &#125;   delay(1000);&#125;void wenshiducaiji()&#123;  delay(1000);  DHT.read(DHT11_PIN);  float RH = DHT.humidity;   //读取湿度数据                         float T = DHT.temperature;       //读取温度数据  Serial.print(&quot;Humidity:&quot;);  //向串口打印 Humidity:  Serial.print(RH);           //向串口打印湿度数据  Serial.print(&quot;%&quot;);  Serial.print(&quot;  Temperature:&quot;);  Serial.print(T);            //向串口打印温度数据  Serial.println(&quot;C&quot;);   if(T&lt;33)//可以通过调节这个参数来改变火焰检测的阀值  &#123;     Serial.print(&quot;温度正常&quot;);    digitalWrite(red,LOW);//关闭提示灯    digitalWrite(beep,LOW);//关闭蜂鸣器  &#125;   else//否则   &#123;     Serial.print(&quot;温度异常&quot;);    digitalWrite(red,HIGH);//打开提示灯    //digitalWrite(beep,HIGH);//打开蜂鸣器    openAndReset();//开门    delay(1000);    digitalWrite(red,LOW);//关闭提示灯  &#125;   delay(500);                  //延时1000毫秒&#125;void fengshan()&#123;  int valll = analogRead(A3);  Serial.println(&quot; &quot;);  Serial.println(&quot;模拟量值为: &quot;);  Serial.println(valll);  if (valll &lt; 600) &#123;    digitalWrite(7,HIGH);    digitalWrite(8,LOW);  &#125; else &#123;    digitalWrite(7,LOW);    digitalWrite(8,LOW);  &#125;  //delay(500);&#125;\n\n\n  \n    \n      风扇模块代码\n\n    \n    \n      \n    \n  \nvoid setup()&#123;  Serial.begin(9600);  pinMode(7, OUTPUT);  pinMode(8, OUTPUT);&#125;void loop()&#123;  int valll = analogRead(A3);  Serial.println(&quot;模拟量值为: &quot;);  Serial.println(valll);  if (valll &lt; 600) &#123;    digitalWrite(7,HIGH);    digitalWrite(8,LOW);  &#125; else &#123;    digitalWrite(7,LOW);    digitalWrite(8,LOW);  &#125;  delay(500);&#125;\n\n  \n    \n      补充\n\n    \n    \n      \n  上述代码还需根据实际整合\n\n\n\n\n  代码中可能存在错误的地方\n\n\n\n\n  如有误请自行进行更正代码\n\n\n    \n  ","categories":["物联网"],"tags":["Arduino","物联网"]},{"title":"VR AR and MR","url":"/2023/06/02/VR%20AND%20AR/","content":"\n  \n    \n      虚拟现实、增强现实与混合现实：开启沉浸式未来的三把钥匙\n\n    \n    \n        \n    什么是 VR、AR 和 MR？\n\n  \n\n  \n    &emsp;&emsp;虚拟现实（VR）、增强现实（AR）和混合现实（MR）是当今最具变革性的沉浸式技术，它们通过不同的方式改变我们与世界的交互。简单来说，VR（Virtual Reality） 像是一扇通往完全虚拟世界的传送门，比如戴上 Meta Quest 头显，你可以置身于一个虚拟的太空站，周围的一切都是计算机生成的。&emsp;&emsp;虚拟现实AR（Augmented Reality） 则像在现实世界加上一层“数字滤镜”，比如通过手机玩《Pokémon GO》，你能在现实街道上看到虚拟的宝可梦。&emsp;&emsp;增强现实MR（Mixed Reality） 则结合了两者的优势，允许虚拟物体与现实环境实时互动，比如用 Microsoft HoloLens，你可以与虚拟全息模型交互，同时感知现实中的桌子或墙壁。&emsp;&emsp;混合现实&emsp;&emsp;从第一性原理看，这三种技术的核心在于感知、交互和现实的融合。VR 完全替换现实，依赖头显、传感器和沉浸式音频打造虚拟世界；AR 通过摄像头或智能眼镜将数字内容叠加到现实；MR 则更进一步，通过深度传感器和空间映射技术，让虚拟物体与现实环境动态融合，仿佛虚拟物体“真实存在”。它们本质上是对人类感官（视觉、听觉、触觉）的模拟和扩展，旨在创造更自然的交互体验。\n\n  \n\n\n\n\n  \n    VR、AR 和 MR 在教育中的应用\n\n  \n\n  \n    &emsp;&emsp;VR、AR 和 MR 在教育领域展现了巨大潜力，通过沉浸式和交互式体验，让学习变得更直观、更有趣。VR 在教育中让学生“穿越”到虚拟场景，比如通过 Google Expeditions，学生可以“走进”古埃及金字塔，观察细节，感受历史氛围。AR 在教育中通过手机或平板增强课堂内容，例如 zSpace 平台让学生用 AR 操控虚拟电路或解剖模型，加深对物理和生物的理解。MR 在教育中则更进一步，比如 Microsoft HoloLens 让医学生在现实教室中与虚拟解剖模型互动，可以“触摸”虚拟心脏并实时调整视角，显著提升学习效率。\n&emsp;&emsp;据研究，VR 和 MR 训练能将知识保留率提升至 60%-70%，远超传统教学的 20%-30%。AR 应用如 TimeLooper 则通过历史场景重现，让学生“游览”中世纪伦敦，增强历史课的沉浸感。然而，教育应用面临挑战：设备成本高（如 HoloLens 价格动辄数千美元）、技术复杂性（需要专业维护）和健康问题（如眩晕或眼疲劳）限制了普及。教师还需设计课程，避免学生因过度沉浸而分心。\n\n  \n\n\n\n  \n    VR、AR 和 MR 在娱乐领域的革新\n\n  \n\n  \n    &emsp;&emsp;在娱乐领域，VR、AR 和 MR 正在重新定义游戏、电影和现场活动的体验。VR 游戏如《Beat Saber》和《Half-Life: Alyx》通过 360° 视野和动作追踪，让玩家完全沉浸在虚拟世界，带来身临其境的冒险。AR 娱乐以《Pokémon GO》为代表，全球下载量超 8 亿次，玩家在现实世界捕捉虚拟精灵，模糊了虚拟与现实的边界。MR 娱乐则更具互动性，比如用 HoloLens 玩《HoloTour》，玩家可以在现实客厅中与虚拟恐龙“对战”，虚拟物体还能根据现实环境调整位置和行为。\n&emsp;&emsp;此外，AR 和 MR 在现场演出和营销中大放异彩。例如，AR 音乐会可通过智能眼镜为观众添加虚拟灯光效果；MR 营销如 IKEA Place 让消费者在家中“放置”虚拟家具，增强购买决策的趣味性。从第一性原理看，这些技术成功的核心是情感共鸣和动态交互，通过逼真的视听效果和实时反馈激发用户投入。挑战在于设备舒适性（如头显重量）和内容开发成本，高质量 MR 内容需要复杂的空间映射算法和大量资源。\n\n  \n\n\n\n  \n    技术挑战与未来展望\n\n  \n\n  \n    &emsp;&emsp;尽管 VR、AR 和 MR 发展迅猛，技术瓶颈仍需突破。硬件限制是主要挑战：VR 头显如 HTC Vive 需要高性能 PC 支持，AR 和 MR 设备如 HoloLens 重量和电池续航仍需优化。软件开发方面，MR 尤其复杂，因为它需要实时空间映射和虚拟-现实交互，开发成本高且周期长。健康问题（如眩晕、眼疲劳）和隐私问题（设备收集的空间和用户数据可能被滥用）也需关注。\n&emsp;&emsp;未来，5G 网络将降低延迟，提升实时交互体验；AI 技术将优化渲染和追踪算法，尤其在 MR 中增强虚拟物体的真实感。例如，AI 驱动的空间映射可让 MR 设备更精准地识别环境。可穿戴设备的进步，如 Mojo Vision 的 AR 隐形眼镜或轻量化 MR 眼镜，将推动普及。预计到 2030 年，VR、AR 和 MR 将深度融入教育、娱乐和工作场景，比如远程 MR 协作可能取代传统视频会议。\n\n  \n\n\n  \n    总结\n\n  \n\n  \n    &emsp;&emsp;VR、AR 和 MR 通过不同程度的现实与虚拟融合，彻底改变了教育和娱乐的体验。VR 带来完全沉浸的虚拟世界，AR 为现实增添数字魔法，MR 则让虚拟与现实无缝互动。从第一性原理看，它们的核心是模拟和扩展人类感知，创造自然、直观的交互体验。尽管面临成本、健康和隐私挑战，5G、AI 和硬件进步将推动这些技术成为日常生活的核心。未来，无论是在虚拟课堂探索宇宙、在现实中捕捉宝可梦，还是与虚拟物体共存，VR、AR 和 MR 正在重塑我们与世界的连接方式。\n\n  \n\n    \n  \n\n\n\n  \n    \n      参考来源\n\n    \n    \n      \n  &emsp;&emsp;视觉中国 \n\n\n\n\n  &emsp;&emsp;百度百科\n\n\n\n\n  &emsp;&emsp;维基百科\n\n\n\n\n  &emsp;&emsp;在线学习\n\n\n    \n  ","categories":["科普"],"tags":["教育","娱乐","科技"]},{"title":"日全食","url":"/2024/04/08/%E6%97%A5%E5%85%A8%E9%A3%9F/","content":"\n  \n    \n      日全食的奥秘\n\n    \n    \n        \n    什么是日全食？\n\n  \n\n  \n    &emsp;&emsp;我们每天看到的太阳是一颗炽热而遥远的恒星，体积是月亮的四百多倍，距离地球也比月亮远四百多倍——巧的是，这两个比值几乎相等，因此从地球上看，太阳和月亮在天上的“大小”刚好差不多。当月亮刚好运行到地球和太阳之间，把整个太阳盘面遮住时，就发生了日全食。\n&emsp;&emsp;日全食是一种罕见的天文现象，它的本质是月亮的影子投射在地球上，并完全遮挡太阳的可见部分。在这个过程中，白天会突然变暗，像黄昏一样。这种现象只会在月亮位于近地点（即月亮较靠近地球）的时候发生，因为只有这样，它投下的“本影”才够长，能碰到地球表面。\n&emsp;&emsp;在日全食中，我们还能短暂看到太阳平时难以观测的结构，比如日冕和色球层，这也是科学家极为重视它的原因。\n2009年7月的日全食，图中可见到钻石环\n\n  \n\n\n  \n    日全食的五个阶段\n\n  \n\n  \n    日全食的发生并非瞬间，而是一个完整而有序的过程，一共包含五个阶段。每一个阶段，都是月亮与太阳交错的结果：\n\n初亏：月亮的边缘刚刚开始遮挡太阳，就像被咬了一口的太阳，日食由此开始。\n食既：太阳完全被遮住，白昼变暗，日全食正式开始。\n食甚：这是日全食的最高潮，月亮与太阳中心完全对齐，黑暗达到最深。\n生光：月亮开始移开，阳光从边缘漏出，宛如天空突然亮起。\n复圆：太阳全部露出，日食结束，世界恢复如常。\n\n&emsp;&emsp;在全食发生期间，气温会下降，动物行为可能会混乱，人类也会感受到一种神秘的宁静与震撼。\n2016年3月的日全食，图中左上方的亮点就是倍里珠\n\n  \n\n\n  \n    日全食为何如此罕见？\n\n  \n\n  \n    你可能会想：太阳和月亮每天都升起，为什么日全食却那么稀有？这是因为日全食发生的天体排列非常苛刻：\n\n必须是新月时（月亮位于地球和太阳之间）。\n必须月球正好处在地球与太阳连线的平面上（因为月球轨道有个小小的倾角）。\n月亮距离地球要够近（投下的影子才够长，能盖住太阳）。\n\n&emsp;&emsp;因此，大多数新月并不会导致日全食。而即便发生了，也只在地球表面极窄的一条带状区域内能看到，其他地区则可能只看到偏食或完全看不到。天文学家统计，一个地点平均每隔约400年才能见到一次日全食。\n\n  \n\n\n  \n    日全食的科学与美学价值\n\n  \n\n  \n    &emsp;&emsp;日全食不仅是一场视觉盛宴，更是一次科学的机会。当太阳被月亮完全遮挡，强烈的光球层消失，我们能直接观察到太阳大气结构——日冕和色球层。\n&emsp;&emsp;早在古代，天文学家就利用日食记录来推算历法和天体运行规律，现代更是借此研究太阳风、磁场活动和地球自转变化。\n&emsp;&emsp;在美学方面，日全食带来了许多令人惊叹的现象：\n\n🌟 倍里珠（Baily’s Beads）：由于月球表面崎岖不平，阳光从月谷间穿过，形成一串珍珠状光点。\n💍 钻石环：在日全食即将开始或结束的瞬间，一颗倍里珠与日冕一同闪现，如同钻石嵌入光环。\n\n&emsp;&emsp;这也是为何日全食期间，总会吸引大量天文爱好者涌入全食带地区，全世界都为之震撼。\n\n  \n\n\n  \n    日全食终将消失？\n\n  \n\n  \n    &emsp;&emsp;听起来可能难以置信，但日全食是一个宇宙中的“暂时现象”。由于月球正以每年约3.8厘米的速度远离地球，总有一天它将无法再完全遮住太阳。\n&emsp;&emsp;科学家预测，约在6亿年后，即使月亮位于最近点，它的视直径也将不足以覆盖太阳，从那时起，地球上将永远不会再有日全食，只有日环食。\n&emsp;&emsp;因此，今天我们看到的日全食，是宇宙在某个时期恰好设定的一种巧合之美，令人感叹时间的奇妙和壮丽。\n\n  \n\n    \n  \n","categories":["科普"],"tags":["日食","天文现象"]},{"title":"你好 世界~","url":"/2020/01/01/%E4%BD%A0%E5%A5%BD-%E4%B8%96%E7%95%8C/","content":"\n  \n    \n      宇宙：你好，世界\n\n    \n    \n        \n    什么是宇宙？\n\n  \n\n  \n    &emsp;&emsp;“宇宙”二字，出自《淮南子》：“上下四方曰宇，古往今来曰宙。” 宇表示空间，宙表示时间。合起来，宇宙就是时间和空间的总和。\n&emsp;&emsp;科学上，宇宙指的是包括所有时间、空间、能量、物质和物理规律的总和。从最小的基本粒子，到最大的星系团，统统都包含其中。\n地球\n\n  \n\n\n  \n    宇宙从哪来？\n\n  \n\n  \n    &emsp;&emsp;当前科学界的主流观点是：宇宙诞生于约138亿年前的一次“大爆炸”（Big Bang）。\n&emsp;&emsp;这不是某处发生的爆炸，而是整个空间本身的膨胀。从一个极度致密炽热的点，逐渐扩展出我们如今的时空。\n&emsp;&emsp;大爆炸并不是宇宙内某个点爆炸，而是整个宇宙在每一处都一起“伸展开来”。\n太阳系\n\n  \n\n\n  \n    宇宙有多大、多老？\n\n  \n\n  \n    &emsp;&emsp;宇宙的年龄大约是137.9 ± 0.2亿年，我们称之为“宇宙年纪”。\n&emsp;&emsp;而目前可观测宇宙的范围约为930亿光年直径，远超我们的想象。但这只是我们“看到”的部分，更远的区域可能仍在不断扩张中。\n&emsp;&emsp;“看不到”≠“不存在”。宇宙可能是无限的，也可能是有限但无边的。\n银河系\n\n  \n\n\n  \n    宇宙是由什么组成的？\n\n  \n\n  \n    &emsp;&emsp;你可能以为星星、行星就是宇宙的全部。但实际上，我们熟悉的“普通物质”仅占宇宙的 **4.9%**！\n&emsp;&emsp;剩下的主要是：\n\n暗物质（约26.8%）：不可见，却有引力，控制星系结构。\n暗能量（约68.3%）：推动宇宙加速膨胀，至今成谜。\n\n&emsp;&emsp;换句话说：我们看见的，其实只是宇宙冰山一角。\n天文学家在银河系中发现了一些几乎有136亿年历史的恒星\n\n  \n\n\n  \n    宇宙是如何演化的？\n\n  \n\n  \n    &emsp;&emsp;宇宙诞生后并不是立刻变成今天的样子，它经历了长期演化：\n\n几分钟：最初的氢、氦等轻元素形成；\n38万年：原子形成，宇宙变透明；\n数亿年：恒星与星系出现；\n今天：星系逐渐聚集，形成宇宙网状结构。\n\n&emsp;&emsp;这些演化痕迹，我们可以通过宇宙微波背景辐射观测到，它是宇宙最早的“光”。\n哈勃空间望远镜拍摄的图片，从左上角起顺时针方向为：蝌蚪星系、锥形星云、两个碰撞的螺旋星系，欧米加星云中新星的诞生\n\n  \n\n\n  \n    人类在宇宙中处于什么位置？\n\n  \n\n  \n    &emsp;&emsp;我们的地球，围绕太阳转；太阳是银河系中一颗普通恒星；银河系也只是宇宙中亿万个星系之一。\n&emsp;&emsp;在宇宙这幅画卷中，人类的存在如尘埃般微小——但我们却能仰望星空，反思自身，这本身就是伟大的奇迹。\n&emsp;&emsp;宇宙浩瀚无边，而我们居然能意识到“它的存在”。\n宇宙\n\n  \n\n\n  \n    宇宙的“时间地图”：宇宙历\n\n  \n\n  \n    &emsp;&emsp;如果把宇宙138亿年压缩为一年时间：\n\n大爆炸 &#x3D; 1月1日\n太阳系 &#x3D; 9月\n恐龙出现 &#x3D; 12月25日\n人类出现 &#x3D; 12月31日 23:59\n现代科技 &#x3D; 最后1秒\n\n&emsp;&emsp;这说明，人类只是宇宙“年历”中极晚出现的一粒尘埃。\n地球\n\n  \n\n\n  \n    我们真的理解宇宙了吗？\n\n  \n\n  \n    &emsp;&emsp;科学让我们逐步认识宇宙，但我们知道的仍然只是冰山一角。比如：\n\n暗能量是啥？没人知道；\n宇宙有没有边界？还在探索；\n宇宙是唯一的吗？或许有“多重宇宙”；\n\n&emsp;&emsp;但正因为如此，未知，才是最吸引人的答案。科学的美，不在于“全知”，而在于“不断逼近真相”的旅程。\n\n\n  \n\n    \n  \n","categories":["初识"],"tags":["科普","宇宙"]},{"title":"浅听浅吟","url":"/2025/01/20/%E6%B5%85%E5%90%AC%E6%B5%85%E5%90%9F/","content":"\n  \n    \n      九篇雪\n\n    \n    \n       \n   九篇雪(一)\n\n \n\n \n   &emsp;&emsp;我说：“又下雪了。”我悄悄起床，趴在窗台上往外看。外面黑乎乎的。我又说：“又下雪了。”睁大了眼睛，什么也看不见。此时，雪的白不知正在谁的梦中白着。我咳嗽了一声，清清嗓子第三次大声说道：“下雪了！”——黑暗中没有一丝响应。许久，房子的某个角落传来打鼾声。我忍不住流下泪来：“真的下雪了……”&emsp;&emsp;就像我说“我真的爱你”一样。这世上总是有那么多的事情不能让人相信。我真的知道每个夜晚雪其实都在下。我无法把这件事告诉别人，是因为我不能解释那些落下的雪又是如何穿行在一个神秘的通道中，然后在天亮前消失。我也并不是真的什么都知道了。当夜深人静时，自己突然从床上坐起，脱口而出的那句话——我也弄不清是不是梦话。&emsp;&emsp;那么，雪到底下了还是没下？\n\n \n\n\n \n   九篇雪(二)\n\n \n\n \n   &emsp;&emsp;真正下雪的夜晚，绝对不会只让我一个人知道。首先天气预报就会提前好几天公布。一推开门世界就变白变厚了的大怪事也只在童年里出现。下雪的夜里，通夜都有人在忙碌，这人刚刚回到家，那人又推开门踏雪而去，说不上究竟是谁第一个经历了雪。&emsp;&emsp;我穿好衣服，戴好围巾手套，早早地推门出去，但还是看到有人在四十厘米厚的大雪上留下了脚印。这行脚印横在门口，从东到西，让我没法过去，只好踩进脚印坑里前进。天色漆黑，路灯昏暗，街道冷清。走在这行脚印中，想着到底是谁，比我更加孤独。&emsp;&emsp;踩着这脚印一直往前走，渐渐丢失了自己原来的方向。我曾停下来想了一会儿，再抬起脚时，不由自主又踩入下一个脚印。我发现我已经无法离开那人留给我的路了。虽然也曾试着从经过的一个路口踏入别的方向，可踩出去一脚，就在雪上跌了一跤。&emsp;&emsp;我接着向前走，渐渐发现，我走他的路是为了追上他，为了看看他的容颜。&emsp;&emsp;我知道他是谁了。&emsp;&emsp;接下来我又渐渐感觉到那行脚印在每一处岔路口的迟疑。也许我可以追上他，我没有丝毫的迟疑。我便跑了起来。路灯突然没有了，天却朦朦胧胧亮了起来，我的心怦怦直跳，呼吸急促。每跨出一步我都感觉他在下一步等我。近了，快了……我跌跌撞撞，不停地摔跤。天渐亮了，我愈发清晰地感觉到了他的气息，我甚至真的听到了他的呼吸和叹气。我心中狂喜，不能自已——我看到前面的脚印停止了下来！我马上就见着他了！我连跑几步，在脚印消失的地方，欲往前再走一步——马上就要见着他的最后一步——时，却赫然惊觉，自己正站在一处悬崖的尽头……&emsp;&emsp;——天一下子重新黑了。我从梦中惊醒，穿好衣服，坐到天明。\n\n\n \n\n\n \n   九篇雪(三)\n\n \n\n \n   &emsp;&emsp;雪是多么不可思议的一种事物！&emsp;&emsp;首先它是白的。它没有杂质，它耀眼。它白，它就是白。它总会让人想起一个咬着嘴唇的沉默而倔强的女孩。它从上面重重积云中下来，云却是灰的。&emsp;&emsp;其次，它是飘落下来的。漫天地飘落，从天到地缠绵着。我们也渴望那种飘——当流星和雨点笔直迅疾地坠落，当鸟儿拍着翅膀呼啦啦啦远去，我渴望升入高处，再慢慢悠悠地落向大地。慢慢悠悠地，什么都看见了，什么都记住了。&emsp;&emsp;然后，它是图案精致的。让人得知有一个人曾多么寂寞，他在那么漫长的岁月中，一片一片反复雕琢出这些精美的尤物。再在剩下的时间里将它们一把一把抛撒、丢弃。这些尤物，在静处和近处给你指出迷宫，然后淡淡一笑，自己却欠身堵住了出口。它展示着它的六片花瓣。树叶有这种形状吗？石头有这种形状吗？梦有吗？死亡有吗？如果世上没有雪，人类永远无法靠现有的想象将这种东西凭空合成。&emsp;&emsp;雪还可以堆积和覆盖。在这世上，能够完完全全去覆盖什么的只有雪和坟墓吧？因此，雪地总是有着墓地的美。我们走在雪上，想到雪被下面的那些，会想到自己就这样走过了。会回头张望。&emsp;&emsp;雪还可以融化，在手心消失，在春天消失。我们留不住雪，以及更多的东西。抓一大把雪将它攥紧吧，去感觉冰凉的、泪水流逝一般的流逝。如果此时你不能把它融化，你就将被它冻僵。雪冷冷地看你，消失了还在梦中这样看你。&emsp;&emsp;但是小的时候我们不知道有关雪的这么多。我们只知道雪可以堆雪人，一个和我们一样大的雪人，而且和我们一样站在大地上。它的一切都由我们来给。胡萝卜的鼻子，煤炭的眼睛，还戴过我的眼镜，围过你的围巾。有一天，它因我们年幼的记忆而产生了奇迹，它和我们一起奔跑过大街和广场，有了生命。后来天暗了，我们回家时不该把它独自留在那里。我们什么都给它的时候没有想到也会给了它孤独。我们真的没有想到。当我们纷纷隔着窗子远远凝望着它，在各自温暖如春的家里。&emsp;&emsp;我们来自于生命中的第一次寂寞，是看到了一个雪人的寂寞吧？如果它没有眼睛和鼻子，如果它仍是一摊平整的雪。如果我们没有惊醒雪，我们没有惊醒它。&emsp;&emsp;我们可能将替它，站过一个又一个冬天。\n\n\n \n\n\n \n   九篇雪(四)\n\n \n\n \n   &emsp;&emsp;我不会悲叹任何一朵落下的花，因为它们已经落下，而我还在这里。而我还不曾老去。我不会悲叹的，当漫天雪花从冬的枝头落下，会看到我仍没有离开。&emsp;&emsp;漫天雪花落下，像舞台的帷幕落幕一样落下。我站在雪地中频频欠身谢幕，又在空旷的观众席上独自热烈鼓掌。我不会哀叹。任何的落去的花，我看见它们已经把青春落下，然后是爱情，最后是生命。落在我脚边的地方。最最后才是雪，像墓土一样层层覆盖，洁白温柔，柔软一地。&emsp;&emsp;等待我的落下。等待我的悲叹。最后它们只等到我亲人们的悲叹。我的亲人们掘开冰雪和泥土，以及一切落下的尘埃，把我深深埋葬，然后落泪离去。我最后看到的是他们的身影在天边落下。\n\n\n \n\n\n \n   九篇雪(五)\n\n \n\n \n   &emsp;&emsp; 雪一个冬天一个冬天地下。在我们看得见的地方陆续融化，却在我们看不见的地方一层一层堆积、加厚。这就是为什么童年时代丢失在操场上的那双红手套再也找不回来了。它被埋得那样深。&emsp;&emsp; 还有春天、夏天和秋天，它们过去也总会有什么一层一层留下。我们看不到。但我们能看到冬天的雪在经过它们时的迟疑和吃力——雪花是一片一片、纷纷扬扬地下的，而不是倾巢出动，轰然从云层里坍塌下来的。每一片雪都是在经过漫长的旅程后，才侧身抱着双肩，小心穿梭行进，一步一步地到达大地。在空中左突右闪，回旋辗转。我们还小的时候只能看到它们的轻盈和优雅，看不到它们正经历着的岁月。&emsp;&emsp; 一年被雪，以及其他的——春天的，秋天的，夏天的——什么东西所埋葬后，十二月才进入到它的最后一天。&emsp;&emsp; 一年过后，我们走在雪野上，含泪想到，又是一年了。&emsp;&emsp; 但是，雪下的时候，却留下了去年经过雪地时的一行脚印，叫我们知道，他也一样一直从去年走到现在。\n\n\n \n\n\n \n   九篇雪(六)\n\n \n\n \n   &emsp;&emsp;雪霁天晴。碎雪仍在若有若无地飘荡。我抬头望着深蓝的天空，看星星点点的碎雪从白茫茫的大地上浮起，像水底的气泡一样缓慢地通过空气向天空浮起，一粒一粒消失在上方的蓝色中。&emsp;&emsp;很少有人注意到雪落地后还会重新升起、回去。他们只会偶尔惊诧一下为什么雪晴后，阳光照耀下的空气会闪闪地发光。&emsp;&emsp;没有风。碎雪左右飘荡，盘旋漫舞，像在风中一样，又像在音乐中一样。&emsp;&emsp;上升，上升。就像眼泪滑落那样上升。天空蓝得能蜇出人的泪水。是不是正是天空的那种比蓝还蓝的蓝，动荡在上空几百米的高处，磁铁一样吸吮着皑皑积雪中没有分量的那部分——那一部分因重量而下坠，落地过程中却不小心将它的重量从手中失落，先它自己掉下来。它便轻轻飘飘失重了。在茫茫大雪中，我们总能看到纷纷扬扬的飞雪中有几粒在犹豫——就是它们；雪停天晴后，我们又看到总有隐隐碎雪浮在空中渐渐上升——也是它们。&emsp;&emsp;那一片亮闪闪的空气中，微渺的碎雪四起时，我正在兀自前行，不住回头张望。假如有一天，我也像一粒落下又飞起的雪那样，那么我又是在为着什么？……这么想着的时候，远方似乎还在等我向它坠落，我踩出的一个个脚印却轻轻牵住了我。并且轻轻，向未来某个日子里浮显，等我有朝一日再次踏上去，再次回到这一步，回到四起的碎雪中去，继续向前。&emsp;&emsp;我不停地回头，不停仰面张望。乍然看去，空中什么也没有，直到眼泪被天地间的明亮刺激出来时，上升的碎雪才一粒一粒被我看见，又一粒一粒在视力可及的范围内向上方的深处消失。&emsp;&emsp;很多故事里，大结局之后我们所不知道的情节又是如何继续的？我们翻过了最后一页，仍然什么也不能知道。除了那个故事结尾的最后一句话，整本书什么也没有说。&emsp;&emsp;难道一切真的不会停止，真的没有结束的时候？&emsp;&emsp;落下又扬起的雪走了，那些落下并积起的雪也不会停留多久。它们离开的过程更复杂，更不易发现。它们的经历更曲折，更不可想象。&emsp;&emsp;而我的行进已经停了下来，在碎雪四处闪烁浮扬的雪野上停了下来。&emsp;&emsp;就像落下的雪那样停了下来。&emsp;&emsp;我最后一次回头望，并仰望蓝天。\n\n\n \n\n\n \n   九篇雪(七)\n\n \n\n \n   &emsp;&emsp; 经年雪封、亘古不化的冰山，是被遗弃得最彻底的东西。四季没法找到它，甚至连冬天也这么说：“这可能是另外一个冬天的尸体。”它说：“是很久很久以前的一个冬天——我不认识它，我们相隔太多的岁月。”那些相隔太多的岁月闻言，便年复一年降落着大雪。&emsp;&emsp; 有一天大山深处喷出了汹涌激荡的岩浆，一泻千里，势不可挡。亿年积雪烟蒸气氲，万古冰层四处迸裂；天为之倾，地为之崩，复活的声音撕裂寰宇，震荡天际，久久不绝，久久不绝。&emsp;&emsp; 后来这声音渐渐远去并消逝。又一场更大的雪降临，一切被埋葬了过去。整个世界仍然什么都不知道。四季仍然沉默，甚至冬天也说：“我真的不认识它。它可能是死亡了亿万年的，曾有过的第五个季节。”\n\n\n \n\n\n \n   九篇雪(八)\n\n \n\n \n   &emsp;&emsp; 下雪与冬天没有多大关系，一年四季都在下。只是别的日子里的雪在落下的过程中渐渐变成了另外的事物，有时以雨的形象出现，有时则是一些落叶，有时则是一场灾难，更多的时候是无边的寂寞。只有冬天的寒冷才能将它原封不动地保存下来，洁白剔透地降临人间。&emsp;&emsp; 或者我们所看到的，所谓的“雪”，也是另外某种事物的最终命运，最后的化身。&emsp;&emsp; 那么雪到底是什么？&emsp;&emsp; 有一种东西到底是什么？&emsp;&emsp; 我们只知年年岁岁都在落下一些东西。一次幸福、一些年轻、一个孩子、一场车祸，或一块陨石。就像雪从铅灰虚茫的天空落下，这些事物的来处也同样渺茫未知。但我们接受了它们，直到我们因越来越多的接受而变得越来越沉重时，我们自己也不能自拔地落下。&emsp;&emsp; 那些绝对不是雪。雪的轻盈和精致是一切下落事物的典范。做这典范的人说：“你此时，就像这样飘荡人世。&emsp;&emsp; 看你多么美丽！可惜你看不到你自己……”&emsp;&emsp; 叫我们如何去相信！&emsp;&emsp; 我们永远无法忍心舍弃的美好，永远不肯罢休的痛苦，还有爱情、童年、孤独、欺骗，还有罪过、仇恨、热望、抵抗……当我们携着这所有落下，我们怎么相信，此时的我们，仅仅只是一片雪？&emsp;&emsp; 他又说：“雪的心，本也是一粒灰尘，只不过衣了重重的华裳。”&emsp;&emsp; 可我们的心却是在怦怦跳动，泵起血液向高处喷涌。我们的四肢和面孔健康而年轻。我们怎能只是像一些雪花那样简单？是谁随随便便就用了这种比拟来搪塞我们激情纷扬的一生，是谁仅用一些雪就欺骗了整个冬天，蒙蔽了我们的眼睛。让一些不该落下的落下，又立即用别的落下的东西，掩盖了它。\n\n\n \n\n\n \n   九篇雪(九)\n\n \n\n \n   &emsp;&emsp;雪下得如此平静，好像它什么都不知道似的。好像它在一边下，一边思量、冥想。在想好之前，绝不愿惊动人似的。&emsp;&emsp;好像它真的什么都不曾做过。它轻轻地摇头，再落下。&emsp;&emsp;而雪地更加平静。平静到看不出它正在延伸。&emsp;&emsp;久久地看，久久地看，也看出了。此种延伸的不易察觉是因为它是以万物的渐渐沉静渐渐休止而延伸。&emsp;&emsp;雪地微颤了一下是因为有人从那边过来了。雪地最后的颤动则是他已经永远地离开。雪地是世间最大的一片空白，填满它吧！于是又下起了一场更安静的雪。&emsp;&emsp;而最静寂最空洞的要数那些雪夜了。夜色把一切动静含在嘴里，雪落像是在梦中落，无凭无依。睡意正滴水般，秒针一格一格地移动般一下一下叩击心灵。入睡后，雪更静更遥远了，梦悄悄地把人向相反的地方带。如果带去的地方也在下雪的话，它又会立即轻轻把你带回来。会让你暂醒片刻。&emsp;&emsp;室内的安静被整个世界的安静所挤压。睡醒的人静静听了一会儿，又更沉地睡去。隔着墙壁和梦，雪纷纷扬扬地下，它既不濡湿什么也不击打什么。它只是一层层覆盖，不露声色。把你留在夜里，不着痕迹。&emsp;&emsp;就这样安静地埋葬你在你的梦境里。&emsp;&emsp;如果有人此时敲打你的院门，深夜里大声呼喊你的名字，它会把所有声响引向别处，引向很多年以后，才让你被唤醒。&emsp;&emsp;雪和夜愈来愈靠近你，又渐渐远去，去到世界上最遥远的地方。再回来，在你的梦里告诉你一些你所不知的事情。再愈来愈近地靠近你。&emsp;&emsp;雪越下，天越黑。雪层一点一点加厚，挤缩着黑夜的空间，使夜退守得更浓，更放低了呼吸。&emsp;&emsp;——正是在这样一个平静异常的深夜里，我突然大汗淋漓，惊梦而起。并失声叫道：&emsp;&emsp;“下雪了！”\n\n\n \n\n    \n  \n\n\n\n  \n    \n      遥远的向日葵地\n\n    \n    \n        \n    有些人的文字你看一百遍也记不住，有些人的文字看一遍就难以忘怀。&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;——王安忆\n\n  \n\n\n  \n    1.所谓“希望”，就是付出努力有可能比完全放弃强一点点。\n\n  \n\n  \n    2.人是被时间磨损的吗？不是的。人是被各种各样的离别磨损的。\n\n  \n\n  \n    3.大地最雄浑的力量不是地震，而是万物的生长啊……\n\n  \n\n  \n    4.当我小的时候我什么都爱。当我长大了，我忘记了我其实什么都爱。\n\n  \n\n  \n    \n她已经没有同路人了。她早已迷路。她在迷途中慢慢向死亡靠拢，慢慢与死亡和解。我却只知一味拉扯她，不负责地同死亡争夺她。我离她多远啊，我离她，比死亡离她还要远。\n\n\n  \n\n  \n    6.等待是植根于孤独之中的植物吧？孤独越强大，等待越茂盛。\n\n  \n\n  \n    7.眼下世界里，青草顶天而生，爬虫昼追日，夜逐月。风是透明的河流，雨是冰凉的流星。只有我最简陋，最局促。\n\n  \n\n  \n    8.人生统统由之前从未曾有过，之后也绝不再发生的事情组成。\n\n  \n\n  \n    9.亲眼看着一点点长成的生命，再亲眼看着它们一点点枯萎，是耕种者千百年来共有的痛苦。\n\n  \n\n  \n    10.月亮的金色是黑暗的金色。每一个人都认为月亮与故乡有关，与童年有关。其实它只和夜晚有关。它把人间的一切的依恋拒之门外。它最孤独，也最自由。\n\n  \n\n  \n    11.睡眠是地球上第二巨大的事物。第一巨大的是安静。\n\n  \n\n  \n    12.世界上最强烈的希望就是“一线希望”吧？\n\n  \n\n  \n    13.在北方隆冬的深夜里，火炉是我生活过的每一个低矮又沉暗的房屋的心脏。温暖，踏实，汩汩跳动。冬夜里一边烤火一边看书，不时翻动炉板上的馍馍片儿。渐渐地，馍馍片儿均匀地镀上了金黄色泽。轻轻掰开，一股雪白的烫气倏地冒出，露出更加洁白的柔软内瓤。夜是黑的，煤是黑的，屋梁上方更是黑洞洞的，深不见底。而手心中这团食物的白与万物对立。它的香美与无边的寒冷对立。\n\n  \n\n  \n    14.我无数次沉迷于荒野气息不能自拔，却永远不能说出这气息的万分之一。我站在那里，复杂、混乱、喧嚣、贪婪。被寂静重重围裹，张口结舌。我无数次赞美荒野，仍不能撇清我和荒野的毫无关系。\n\n  \n\n  \n    15.我就是一个骗子，一个欲望大于能力的骗子。而被欺骗的外婆，拄着拐棍站在楼梯口等待。她脆弱不堪，她的愿望也脆弱不堪。我根本支撑不了她，拐棍也支撑不了她。其实我早就隐隐意识到了，唯有死亡才能令她展翅高飞。\n\n  \n\n  \n    16.几乎每个母亲都有自己的拿手菜，几乎每个孩子对母亲的怀念里都有食物的内容。\n\n  \n\n  \n    17.没有风，田野静得像封存在旧照片里。\n\n  \n\n  \n    18.屋顶没留天窗，地窝子里总是黑洞洞的。然而安全感正来源于黑。外部世界实在太亮了，夜晚都那么亮。万物没遮没拦。只有我们的地窝子，在无限开阔之中伸出双手把我们微微挡了一下。\n\n  \n\n  \n    19.等尘埃落定，再出门去看，风已转移到天上。河流全部涌向了星空。大风令星空一片混乱，灿烂耀眼。银河流得哗啦作响。\n\n  \n\n  \n    20.关于地球的全部秘密都在风中。风声呼啸，激动又急迫。可我一句也听不懂。它拼命推我攘我，我还是什么都不明白。它转身撞向另一场大风，在我对面不远处卷起旋风，先指天，后指地。\n\n  \n\n  \n    21.如果说作物的生长是地底深处黑暗里唯一的光芒，那么，那个人经过的大地，随着他脚步的到来，一路熄灯。他的每一个脚印都是无底深渊。\n\n  \n\n  \n    22.沙枣花开了，这片荒野中所有的年轻的，无依无靠的爱情，终于在大地上停止了流浪。直到沙枣终于成熟，沙枣花香才心甘情愿退守到果实深处。所有爱情瓜熟蒂落。\n\n  \n\n  \n    23.她只知道火车是唯一的希望。火车意味着最坚定的离开。\n\n  \n\n  \n    24.外婆死了，一滴水消失在大海之中。一生寂静得如同从未在这世上存在过。\n\n  \n\n  \n    25.实在不愿独自出现在陌生而喜庆的人群中。便极力地谢绝。\n\n  \n\n  \n    26.都说“人死如灯灭”，可外婆死了以后，她的灯才慢慢亮起，慢慢照亮我们最真实的内心，和我们往后的道路。\n\n  \n\n  \n    27.秋天来临的时候，我们的葵花地金光灿烂、无边喧哗，无数次将我从梦中惊醒，却没有一次惊醒过他的故乡。\n\n  \n\n    \n  \n\n\n\n\n\n  \n    \n      文章摘自 | 李娟散文\n\n    \n    \n      \n  九篇雪遥远的向日葵地百度百科\n\n \n\n    \n  \n\n\n","categories":["夜读"],"tags":["九篇雪","遥远的向日葵"]},{"title":"今天的风 吹过过去与未来","url":"/2024/07/21/%E6%97%A5%E8%AE%B0/","content":"\n\n  e295ba05ee4c1c777ee807bcc63d46050d1a7cd041491015d4d039ed2e973fa9bc6023c01b8784d1ac2ea8be0944605decf9f6327620426eb68169cda46d8e19656d52b35ab32d46179bd47ee49b75eb051e46cf199c13e44838d8f04f70e11b176a3d507d2a7412d0e7e9d5ad8d5f0879b64049a505f01b3a7f53b816fb5f251a89502cb2c1d9a6e61e996732f5a1d0bfcf6d85655a6af9fdae9903ead368fc308afe5c8f1d0ff8b5b38f63c4321623d824197578e9d9fca82dffe03c57c7d14497856ff0bc0fecfd1039262ab0fbcbabffb218ed8557dfc036beb8d1f3905fff3a8f188fef2fa86add79cfab40081450fca158f4d19f90c157cffa86382143cbb83c169714889dfe560340c25129ea7d7932567150b62d6efe229c3655dbeeb6c6cedbf9973ec4eb13938ffeb3fb98ca5a300998a47741a152cb425c4a4480407018cc720cd01a3193e7cef9e86cde1b8c04d9ac7f4f88a6d1a7539304871f7858ed69dad3cd9146b036a2a7cd8751d2c99198b7f00501126f601ce0f17c3e5393a54f479ba80d1f774734b6b6e329c85a358ab7b873245158e5d48060cdb1076b4d0ae6e35d729ea439a749b1e6fca6fbd08f677e567f5041378449779dc4d72400a6595679fb4084fb46c98cc07e185bc37a8fa072e33ab2d1749b9b222df57e777287ecf0731340803db00edae98ecc49150afb375dac6271b2e7c20b092341881b332c01d1dc47a5dba3566dd9e92b5bb3c9f25de2df0437764d5afa1b0b64176cf259774c32e9f9cb64d35ca11c914884fa45ec525baa5e524d984e73776de1368f92b333b4797bec7ea4509ba3baf61e3dc95f143cbbe7cb9e4bf18be5d01387c2317a2e9ec57f2e8a6ed6b2ef2732bb68986d18ba778205bb835bb0\n  \n    \n      \n      \n        Hey, password is required here.\n      \n    \n  \n\n\n\nimport {initHBE} from \"/js/plugins/hbe.js\";\n  console.log(\"hexo-blog-encrypt: loaded.\");\n    initHBE();\n\n","categories":["日记"],"tags":["过去","现在","未来"]},{"title":"深度学习-神经网络模型","url":"/2023/05/25/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/","content":"&emsp;&emsp;\n  \n    \n      一、什么是神经网络\n\n    \n    \n      &emsp;&emsp;神经网络是深度学习的核心，灵感来源于人脑的神经元结构。简单来说，它是一组通过数学运算连接起来的节点（或称“神经元”），这些节点分层工作，共同处理输入数据，生成有意义的输出。例如，你给神经网络一张猫的图片，它可以通过学习识别出这是“猫”而不是“狗”。\n&emsp;&emsp;从第一性原理出发，神经网络的核心在于数据流动和参数优化。输入数据经过多层节点处理，每层节点通过权重、偏置和激活函数对数据进行变换，最终输出预测结果。这个过程就像一个复杂的数学函数，通过不断调整参数（权重和偏置）来逼近真实答案。&emsp;&emsp;\n\n    \n  \n&emsp;&emsp;\n  \n    \n      二、从像素说起\n\n    \n    \n      &emsp;&emsp;要实现图像识别，最离不开的，就是像素。&emsp;&emsp;其实我们都知道，图像是由像素组成的。实际上，神经网络计算，算的就是像素之间的关系，以及这些关系背后可能隐藏的图片信息。&emsp;&emsp;相机摄像头像素2000万，拍出来的照片肯定比像素1000万的要清晰我们更容易看到图片中的物体是什么。&emsp;&emsp;这是为什么？因为像素越多，像素之间的关系（色彩，轮廓）越丰富，我们所能看到的信息就越多，自然而然获取到的信息就多。&emsp;&emsp;图片&emsp;&emsp;一张1080p的图片，我们可以更容易辨别出图像中的物体是山还是水。这是因为更多的像素会给眼睛更丰富的图片细节&emsp;&emsp;但是，你有没有发现，当我们去看一张图片时，我们绝对不是盯着某一个像素或某几个像素看，而是看了整个图像的大部分区域，或者说，大部分像素！&emsp;&emsp;因为只有看到了大部分的图片，才能知道图中是座山。正所谓，聚沙成山！绝不是少了一粒沙，山就不是山，多了一粒沙，就变成了山。\n  \n    像素局部性 \n\n  \n\n&emsp;&emsp;图片&emsp;&emsp;上图哆啦A梦，虽然不是很清晰，像素点数也很少，但一眼望去，依然可以分清是哆啦A梦，甚至，用手捂住一半的图像，依然可以。&emsp;&emsp;这是因为人眼对于图像信息的识别，是建立在对像素局部性分析的基础上的。&emsp;&emsp;所谓局部性，通俗点说，就是眼睛或大脑会将相邻的像素或大片的像素连接起来分析，从而组合成嘴巴，然后是耳朵，最后是哆啦A梦。&emsp;&emsp;神经网络识别图片大致就是这样的原理，它模拟的，就是人们看到图片之后的信息处理过程。&emsp;&emsp;当我们盯着一个图片看时，我们首先会获取到图片的细节特征。比如哆啦A梦红色的大嘴巴。&emsp;&emsp;但是如果仅仅盯着大嘴巴，又反而让人有一种“只缘身在此山中”的感觉，看不到图片的全貌。&emsp;&emsp;因此还需要看一下图像的轮廓。于是，我们的眼睛看图片大致有以下两个过程：&emsp;&emsp;瞳孔放大，盯着某一处细节（如大嘴巴）看，瞳孔缩小，模糊的看一张图片的大致轮廓&emsp;&emsp;两个过程获取的信息叠加。&emsp;&emsp;Bingo，看清楚了，是哆啦A梦！那么神经网络是否可以模拟这种瞳孔放大、缩小的方式呢？&emsp;&emsp;很幸运，可以！&emsp;&emsp;那就是卷积算法。\n  \n    卷积\n\n  \n\n&emsp;&emsp;卷积的计算示意图&emsp;&emsp;卷积核的设计，就可以很直观的模拟这种获取图片信息的方法。&emsp;&emsp;人们通过调整卷积核的大小，来达到瞳孔张开、缩小的目的。&emsp;&emsp;并且大量的实验和论文表明，卷积这一针对图像局部性识别的算法，可以非常有效的模拟人眼识别物体的过程。&emsp;&emsp;关于卷积算法以及卷积核的设计原理，后面会专门来讲，因为卷积这一算法，在图像处理领域，太重要了。&emsp;&emsp;我们现在继续沿着像素这一话题讲下去。\n  \n    色彩分量RGB\n\n  \n&emsp;&emsp;回到像素这一话题，你有没有想过，为什么一张图片会是彩色的。\n\n&emsp;&emsp;学过摄影的小明同学可能这时会回答：因为图片是由RGB三种颜色来表示的，每个像素实际是不同的R&#x2F;G&#x2F;B分量的叠加，混合起来，就表示成了不同的颜色。\n&emsp;&emsp;回答正确。\n&emsp;&emsp;三张分别表示R/G/B分量的图片，合成一张彩色图片&emsp;&emsp;对于上面一张RGB的图，我们人眼可以很直观的看到红色和蓝色，可以察觉到一张图片的色彩和轮廓。&emsp;&emsp;那么，如果让计算机来处理图片，他又是如何知道色彩和轮廓的呢？&emsp;&emsp;其实对于计算机来说，一张图片只是一堆数据，计算机是无法知道这堆数据代表的是什么。&emsp;&emsp;这就需要人为的给这堆数据一种表示方法，让计算机知道，哦，这1&#x2F;3的数据是红色分量，这1&#x2F;3的是蓝色分量，这些数据（像素）组合起来，可能代表的是个“帽子”。&emsp;&emsp;怎么做呢？通过设计数据在计算机中的存储方式来解决。&emsp;&emsp;数据在计算机的存储中，最常见的存储方式是连续存储的。&emsp;&emsp;比如C语言，定义一个数组，那么数组在内存中的位置是连续的。&emsp;&emsp;int data[10] &#x3D; {0,1,2,3,4,5,6,7,8,9};&emsp;&emsp;内存怎么理解，它就是一排连着的门牌号的公寓宿舍。门牌号为101里面住着的，是data的第一个数据0。门牌号102里面住着的，是data的第二个数据1，…，以此类推。\n&emsp;&emsp;内存也是类似于门牌号规则，数据就像人一样，存储在以地址为标识的一个个的内存地址上（房子）&emsp;&emsp;只不过，在计算机存储器中，没有门牌号，有的都是地址。这个时候，计算机根本就不关心数据是啥，计算机用到的时候，就把数据从内存对应的地址中取出来用。\n  \n    计算机是如何取像素数据的\n\n  \n&emsp;&emsp;人们为数据存储设计一种格式，告诉计算机，这堆数据大概是什么样的。只有这样，通过这种约定的方式，计算机才能正确的取到R分量或者B分量。\n\n&emsp;&emsp;对于一张图片来说，最常见的两个参数是长和宽，一般用H（height）和W(width) 来表示，那么RGB三个分量，看作是3个通道（channel），一般用 C 来表示。\n&emsp;&emsp;如此一来，一张长宽分别是224像素*224像素的RGB图像，就可以用 HWC &#x3D; [224, 224, 3]来表示。\n&emsp;&emsp;两张类似的图片就用 NHWC &#x3D; [2, 224, 224, 3]表示，其中N代表图片张数。\n&emsp;&emsp;一张图片的抽象数据表示&emsp;&emsp;友好的数据表示方法，可以减少大量的计算复杂度。&emsp;&emsp;虽然这样表示不太利于人们的直观理解，但是计算机处理这种数据是十分方便的。在目前主流的深度学习框架中，对于图片的数据格式，基本都支持了NHWC或NCHW这种数据摆放格式。说到底，都是为了更高效地进行图片数据的处理和运算。\n  \n    总结一下\n\n  \n&emsp;&emsp;这一章，从像素说起，说到了像素具有局部连接性的，人眼识别图像也是通过获取像素的局部连接性信息来完成的。\n\n&emsp;&emsp;幸运的是，卷积这一算法，可以很好的模拟这一过程。最后，为了使计算机更高效的处理图片数据，引出NHWC的图片数据表示方法，所以，之后我们说图片，不仅仅局限于图片的长和宽，还多了一个维度信息，那就是channel。\n&emsp;&emsp;熟悉OpenCV或者计算机视觉，数字图像处理的同学，可能对于下面的RGB分量中的大神很熟悉。没错，在很多的教程中，这位女神不止一次的出场。\n&emsp;&emsp;Lena&emsp;&emsp;这位女士名叫Lena。&emsp;&emsp;电气电子工程师学会图像处理汇刊（IEEE Transactions on Image Processing）主编曾在1996年1月出版的一期中解释道，Lena的流行，因为她是一张好的测试图片，其中包含了很多细节，平滑区域，阴影和纹理。&emsp;&emsp;\n\n    \n  \n\n  \n    \n      三、图像的色彩空间\n\n    \n    \n      &emsp;&emsp;上一章从像素开始，聊到了RGB 这一常见的色彩空间模型。&emsp;&emsp;之所以还想继续聊聊RGB 以及另一种色彩空间模型-YUV ，不是说想要以后去学摄影，学学如何需要调节色度、曝光和饱和度啥的。&emsp;&emsp;而是在图像识别的深度学习任务中，RGB以及YUV这些概念，总是会时不时的出现一下，让枯燥无味且高度抽象的深度学习算法，突然之间，变得具体一些，光鲜一些。\n  \n    RGB\n\n  \n&emsp;&emsp;Red，Green，Blue（RGB）是我们最常见的图像表示方法。这个非常好理解，三原色的融合，几乎可以构造出所有需要的颜色。三张RGB分量图片的融合，就可以构成一幅色彩斑斓的图片。\n\n&emsp;&emsp;原图与RGB 三个分量图片\n&emsp;&emsp;平时我们说，分辨率为19201080的图片，它代表的是在长宽两个方向上，有 1920 * 1080 个像素，但是，在色彩这个方向上，还有 3个通道（channel），也就是RGB，往往被我们忽略。我们看到的一个像素点的颜色，在计算系统中，并不是简单的由一个数值来表示的，而是由RGB三个分量的三个数值来表示的。&emsp;&emsp;一个像素点的 RGB 表示&emsp;&emsp;因此，想要计算一张19201080的图片的大小，或者说计算这张图片在计算机内存中所占用的大小时，不能仅仅用图片的长度乘以宽度这么算，还需要考虑通道数。\n  \n    数值表示和图片大小计算\n\n  \n&emsp;&emsp;我们可能用过画图这一软件来调过颜色。\n\n&emsp;&emsp;通过简单的设置红色，绿色，蓝色的数值，就可以在调色板中得到一个颜色。有没有注意到，无论红色，还是绿色，还是蓝色，其表示的数值都没有超过255。\n&emsp;&emsp;为什么？因为像素值，在计算机语言中，是用一个 int8 的数据来表示的。而 int8，指的是 8bit 无符号整数，其能表示的范围就是 0 - 255。\n&emsp;&emsp;说到这，我们就可以算一算，一张1920 * 1080 的RGB图像，在计算机的表示中，到底占多少的内存？\n&emsp;&emsp;很简单，长宽方向上每个像素由 3 个通道组成，每个通道由一个 8 bit 的数值表示，一个 8 bit 数值代表一个字节（Byte）。\n&emsp;&emsp;因此，一张1920* 1080的 RGB 图像，占计算机存储大小为1920* 1080 * 3 * 1 Bytes &#x3D; 6075 KB &#x3D; 5.9 MB5.9 MB 的内存占用！\n&emsp;&emsp;大么？和目前动辄几个G的手机内存相比，不算大。\n&emsp;&emsp;小么？和边缘侧图像识别终端内存，比如摄像头里的嵌入式芯片内存相比，又不算小。\n&emsp;&emsp;更何况在公路违法拍照的摄像头场景下，在车流量很大的时候，需要实时处理的图片，可远远不止一张！\n&emsp;&emsp;那怎么办？有没有办法可以在进行图像处理时，减少图片的数据量，从而减少图片大小和内存占用呢？\n&emsp;&emsp;有，YUV就是其中一种办法。\n  \n    YUV\n\n  \n&emsp;&emsp;YUV是将亮度信息和颜色信息进行编码的一种颜色空间表示方法。和RGB类似，YUV 也使用3个字母维度来表示颜色。为了简单点，我们暂时将这3个值称为Y，U和V。\n（事实上，YUV的称呼很多，比如Y'CbCr，也很细节，这里不多描述，我们只要知道它是另外一种表示颜色的方法就可以。）\n\n&emsp;&emsp;Y 代表亮度，U 代表色彩度，V代表饱和度。\n&emsp;&emsp;原图\n&emsp;&emsp;仅有Y分量也就是亮度，黑白图片\n&emsp;&emsp;仅有U分量，只有色度\n&emsp;&emsp;仅有V分量，只有饱和度&emsp;&emsp;上面的几张图片，除了原图之外，我们可能更加倾向于使用只有Y分量的图片，也就是那张黑白图像。&emsp;&emsp;因为即使没有色彩，但是它的轮廓以及明亮程度，也足以让我们分辨出图片中的物体。其视觉效果远远好于其他两个分量的图片。相反，只有色度和饱和度的图片，反而变得模糊不堪。&emsp;&emsp;这就是问题所在！人眼对于亮度具有更高的敏感度，而对色度和饱和度反而显得迟钝一些。&emsp;&emsp;说到这，有没发现什么？既然人眼对于色度和饱和度的反应不敏感，那就没有必要把所有的色度和饱和度信息都放在图片里了啊。&emsp;&emsp;举个例子，色度和饱和度我隔一个像素放一个，剩下的像素没有饱和度，不就可以了么。没错，是可以，而且效果很好。&emsp;&emsp;这就是YUV的不同编码。\n&emsp;&emsp;图片&emsp;&emsp;YUV422编码&emsp;&emsp;实际上，YUV的编码方式有很多种，比如YUV444, YUV422等。&emsp;&emsp;大致意思就是，保留全部的Y分量（人眼最敏感的亮度分量），但是只保留部分的U&#x2F;V分量（人眼不敏感），以此来减少图片的占用，但又不失重要信息。&emsp;&emsp;还记得上面的19201080的RGB图片的内存占用么，为5.9MB。如果用YUV444的编码，结果也同样是5.9MB，因为YUV444也是全采样，所有的亮度、色度、饱和度信息都保留了。而如果采用YUV422的编码，相当于U分量减少一半，V分量减少一半。&emsp;&emsp;那么最终的图片占用大小就变成了1920 1080 * (1 + 0.5 + 0.5) Bytes &#x3D; 4050KB &#x3D; 3.9MB&emsp;&emsp;只有3.9MB，减少了1&#x2F;3的内存占用！是不是好很多？更多关于YUV的编码知识，有兴趣的同学可以Google。如果不做相关课题，可以不用深究。&emsp;&emsp;我们只需要知道，YUV这一色彩编码方法，在保留亮度这一人眼最敏感信息的基础上，通过降低其他人眼不太需要的信息，可以来达到降低图片大小的目的。&emsp;&emsp;就足够了！\n  \n    YUV编码的用途\n\n  \n&emsp;&emsp;原始图片，channel数代表的是RGB通道，可以理解为原始图片具有的三个特征。\n\n&emsp;&emsp;可在深度学习网络中，随着网络深度的增加，图片的channel数会不断的增大。就拿Resnet50这个网络来说，最后面的一层图片，channel数已经增大到了2048。这时channel代表的信息，早已不再是RGB这种基础的特征了。而是通过了大量的神经网络训练，代表了图片的多种分类特征，比如是猫的特征还是狗的特征。\n&emsp;&emsp;这个后面会详细说。\n&emsp;&emsp;YUV这种编码方法，可以用在图片的上下采样中。通过降低或增加通道数，实现图片的上下采样，以此来实现图片的增大或减少，但又不损失太多我们希望保留的信息。\n  \n    总结一下\n\n  \n\n&emsp;&emsp;这章聊了聊RGB、YUV 两种颜色空间，以及YUV可能的用途和它的优势。\n&emsp;&emsp;为什么聊这么多关于图片的东西，因为在深度学习处理图像的任务中，图片是原材料。正所谓知己知彼，百战不殆。\n&emsp;&emsp;了解了图片这一深度学习的原材料之后，我们就可以更加高效的来完成图片数据的处理和分析。就可以开始图像识别的算法之旅了！\n&emsp;&emsp;公元663年，唐代诗人王勃游历南昌，登滕王阁而做序，大笔一挥，豪气万丈。\n&emsp;&emsp;当时的王勃，傲立在滕王阁楼顶时，看到的应该是怎样的一副壮美图景，才使得中国文坛留下了一句千古绝唱。&emsp;&emsp;\n  \n    潦水尽而寒潭清， 烟光凝而暮山紫。\n\n  \n\n&emsp;&emsp;当时的王勃，应该怎么也不会想到，1000年后的今天，聪明华夏后人，将”暮山紫”这一颜色进行了编码。从此，暮山紫，不只存在于人们的想象中，而是精确地存在了计算机里。\n暮山紫\n\n    \n  \n\n\n  \n    \n      文章源自\n\n    \n    \n      \n  知乎-图像识别-Resnet网络拆解\n\n\n    \n  \n\n\n  \n    文中一些表述难免有疏漏，若有错误，欢迎指正，谢谢\n\n  \n\n  \n    邮箱：&#x31;&#x37;&#x39;&#53;&#x38;&#x34;&#x37;&#56;&#54;&#51;&#64;&#113;&#x71;&#x2e;&#x63;&#111;&#x6d;\n\n  ","categories":["机器学习"],"tags":["深度学习","神经网络","Resnet50"]},{"title":"赛博朋克","url":"/2023/05/20/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B/","content":"\n  \n    \n      赛博朋克\n\n    \n    \n        \n    什么是“赛博朋克”？\n\n  \n\n  \n    &emsp;&emsp;“赛博朋克”（Cyberpunk）是一种源于科幻文学的文化风格，它描绘的是一个高度科技化却社会破碎的未来。\n&emsp;&emsp;这个词由“Cyber”（控制论）和“Punk”（反叛文化）组成，意指：在高科技背景下的反乌托邦世界。\n&emsp;&emsp;一句话概括：“高科技，低生活（High-tech, Low-life）”。\n&emsp;&emsp;赛博朋克中的世界往往充满了巨型企业、AI控制、网络空间、仿生人、黑客、霓虹灯、雾霾、混乱的城市，还有挣扎在边缘的“反抗者”。\n\n  \n\n\n  \n    它是怎么来的？\n\n  \n\n  \n    &emsp;&emsp;“赛博朋克”概念起源于1980年代的美国科幻文学，代表作如：\n\n威廉·吉布森的《神经漫游者》（Neuromancer，1984）\n布鲁斯·斯特林等人的短篇合集《镜子里的燃烧器》\n\n&emsp;&emsp;赛博朋克作为一个文学分支，后来迅速影响了电影、游戏、建筑、时尚甚至哲学，逐渐演变成一种跨领域文化风格。\n&emsp;&emsp;可以说，它是一种对技术进步过度依赖所引发的未来焦虑的文学回应。\n\n  \n\n\n  \n    赛博朋克的典型特征\n\n  \n\n  \n    &emsp;&emsp;以下是赛博朋克世界常见的设定元素，你一定在影视作品或游戏中见过：\n\n高科技环境：AI、仿生人、增强义体、意识上传、虚拟现实；\n城市废墟感：高楼林立但混乱、脏乱、压抑；\n社会分裂严重：贫富差距巨大，普通人活在科技边缘；\n控制权被资本垄断：政府式微，企业统治一切；\n主角是“边缘人”：如黑客、雇佣兵、赏金猎人。\n\n&emsp;&emsp;这不是一个明亮、未来感满满的世界，而是一个被科技异化的人类社会。\n\n  \n\n\n  \n    代表作品有哪些？\n\n  \n\n  \n    &emsp;&emsp;以下是几部赛博朋克风格的代表作，无论是视觉、氛围还是哲学思辨都极具影响力：\n\n🎬 《银翼杀手》（Blade Runner，1982）：视觉奠基之作，迷雾、霓虹、仿生人；\n📖 《神经漫游者》（Neuromancer）：奠定赛博文学风格；\n🎮 《赛博朋克2077》：近年最具代表性的游戏作品；\n📺 《黑镜》：现代数字社会的赛博朋克现实变体。\n\n\n  \n\n\n  \n    它仅仅是“风格”吗？\n\n  \n\n  \n    &emsp;&emsp;赛博朋克不仅是视觉风格，更是一种文化批判和哲学探讨。\n\n对科技的反思：科技进步≠人类进步；\n对现实的预警：资本极权、个人隐私消失、身份模糊；\n对“人”的重新定义：当你用AI大脑、机械手臂、数字意识，还能称之为“人”吗？\n\n&emsp;&emsp;它给我们的不是“酷炫未来”，而是一个警示：“我们真的准备好面对技术带来的社会改变了吗？”\n\n  \n\n\n  \n    赛博朋克的现实投影\n\n  \n\n  \n    &emsp;&emsp;你可能没注意，我们已经部分活在“赛博朋克”中了：\n\n手机&#x3D;随身网络终端；\n人脸识别+大数据&#x3D;隐私被剥夺；\nAI写作、AI画图、AI法官&#x3D;人机界线模糊；\n元宇宙、虚拟现实&#x3D;网络逃避现实；\n城市天际线、光污染、阶层固化……\n\n&emsp;&emsp;它不是幻想中的未来，而是我们当下逐渐逼近的真实。\n\n  \n\n\n  \n    未来会变成赛博朋克吗？\n\n  \n\n  \n    &emsp;&emsp;“未来会不会变成赛博朋克？”这个问题的答案，其实取决于我们现在的选择。\n&emsp;&emsp;科技本身并不带有善恶，它的用途和后果由人类决定。我们是否能建立透明、平等、有尊严的科技社会，决定了我们未来是迈向“乌托邦”还是“赛博朋克”。\n&emsp;&emsp;或许真正的问题不是“未来是什么样的”，而是你希望它是什么样的？\n图片\n\n  \n\n    \n  \n","categories":["科普"],"tags":["科普","文化","赛博朋克"]},{"title":"银河系vs仙女座星系","url":"/2022/05/20/%E9%93%B6%E6%B2%B3%E7%B3%BBvs%E4%BB%99%E5%A5%B3%E5%BA%A7%E6%98%9F%E7%B3%BB/","content":"\n  \n    \n      知识科普\n\n    \n    \n      银河系与仙女系相撞？在天文望远镜被发明以来，近代天文学得到了突破性的发展，人们能够真切观察到神秘且遥远的宇宙，能深入观测到每一个天体的变化与无穷。 随着天文设备的不断革新，天文学家们在发现了更多的宇宙真实的同时，也察觉到了一些即将发生在未来的灾难——本星系群的仙女座星系将在未来与银河系发生大碰撞。\n\n    \n  \n\n  \n    \n      仙女座星系\n\n    \n    \n      仙女座星系早在18世纪时期就已经被天文学家们察觉到了，伊曼努埃尔·康德甚至在当时就认为这或许是一个巨大的恒星系统，当然，恒星系统不仅仅是指类似于太阳系这样的行星围绕恒星旋转的现象，也指星团或者星系，即一些恒星受到引力约束而互相环绕的系统。 然而由于当时技术并不算发达，这位天文学家的说法一直都没有得到确切的证据，直到上个世纪20年代，另外一位天文学家发现了在仙女座星系的外区检验并且确认了其他属于该星系的恒星，才使得这一说法被证实。 在2012年以前，同样是因为技术上的不足，天文学家们只能凭借着“多普勒效应”，即观测星系恒星光谱线的变化，来分析出仙女座星系在人类观察者视线方向的速度，可我们很难测量出仙女座星系与视线方向垂直的运动速度。\n\n    \n  \n\n  \n    \n      多普勒效应\n\n    \n    \n      根据“多普勒效应”，天文学家们已经得知了仙女座星系在当时正朝着地球以每秒钟120公里的径向速度靠近，可因为缺乏其他的相关数据，天文学家们还无法得知它是否会与银河系发生碰撞。 到了2012年，天文学家们利用哈勃空间望远镜，以其优于地面天文台的强大功能分析了仙女座星系在2010年到2012年两年时间的运动状态，发现它相比银河系而言，切向速度或侧向速度相对来说比切向的接近速度要小。这两个星系的横向速度都比天文学家们之前预测得要小很多，因此他们认为，银河系与仙女座星系或许将在39亿年左右的时间点发生碰撞。\n\n    \n  \n\n\n  \n    \n      仙女座星系与银河系\n\n    \n    \n      然而在2019年2月26日，美国国家地理却表示，仙女座星系正以每秒300千米的速度奔向银河系，两者发生碰撞的时间并不在39亿年左右，而是会向后推迟6亿年的时间，换句话说，这场灾难大概会发生在45亿年后。\n\n    \n  \n\n\n  \n    \n      地球会受到影响吗？\n\n    \n    \n      假设我们不考虑其他的复杂影响，只单单猜想当银河系与仙女座星系发生碰撞，地球会变得什么样子呢？能否幸免于难呢？\n\n    \n  \n\n\n  \n    \n      计算机模拟撞击过程\n\n    \n    \n      可能很多人会认为，两个巨大的星系互相撞击，必然会导致无数的恒星相碰撞，进而造成巨量的恒星因为撞击而死亡，同时恒星之间的相撞也会爆发出强烈的辐射和能量等，届时地球周围的环境将会更加恶劣和危险。 若是不幸运的话，太阳系可能也会被“不速之客”影响，地球也将会不复存在。 但是事实却并非如此，因为不管是银河系还是仙女座星系，这两个星系的实际恒星密度都不高，恒星之间的距离非常遥远。\n\n    \n  \n\n\n  \n    \n      哈勃望远镜拍摄的银河系内球状星团M15\n\n    \n    \n      虽然宇宙中各大天体的体积对于人类而言都格外庞大，但是我们需要知道的是，恒星与恒星之间距离单位是以光年为起步的，太阳距离最近的恒星都隔着4.22光年，更别说其他恒星了。 也因此，我国的天文学家苟利军表示，银河系与仙女座星系的相撞对地球的影响非常小。 更有天文学家们针对两者的撞击进行了计算，发现虽然银河系与仙女座星系未来必然会发生撞击，以及融合成一个更大的星系，但两个星系的恒星相撞概率几乎为零，极其渺茫。 这意味着绝大多数的恒星其实都是互相从空隙中穿过，太阳系极大可能并不会受到太多的影响，甚至那时候如果还有人类存在，我们将会从天空中看到史无前例的绚丽“灯光秀”。 尽管从上面来看，地球基本上能够在两大星系的悍然撞击合并下幸免，但是影响地球演化之路的并非仅仅只有星系相撞这一种。 我们需要知道的是，地球本身是非常脆弱的，它之所以能在几十亿年里一直处在太阳的宜居带之中，并且源源不断的在各种各样的灭绝与灾难中重回新生，推动数次大灭绝下残存的物种再次壮大的原因其实是多种因素共同维护而成的。 地球如今的繁荣昌盛，离不开太阳系外的日光层对宇宙辐射的防护，离不开木星强大的引力下对误闯的陨石、小行星等外来物的防线，也离不开地球外几十亿年来默默抵挡了大量危险陨石的月球等等。\n\n    \n  \n\n\n  \n    \n      月球表面\n\n    \n    \n      如果有一颗巨大的陨石在巧合之下突破了木星的引力牵制，也跨过了月球的第二重防线，直直轰击在地球上，那么引起了第五次大灭绝的惨状将再次发生在地球，甚至若是威力再巨大一些，地球也将会就此沉寂，成为如同火星一样的荒星。 就算我们不考虑陨石坠落等意外现象，太阳作为一颗寿命为100亿年的黄矮星，如今已经走过了它一半的生命之旅，大概有45.7亿年的岁数了。 这也意味着，太阳将会在50亿年左右的时间耗尽内核处的氢元素，核聚变开始燃烧更高质量的元素，太阳也会向外膨胀，直到外层蔓延至地球甚至是火星所在的位置。\n\n    \n  \n\n\n  \n    \n      太阳未来\n\n    \n    \n      虽然在这里看来，太阳死亡的时间远比银河系与仙女座星系碰撞的时间要晚，但是随着太阳的不断燃烧，其光度大概每10亿年就会增加10%左右，同时温度也在持续缓慢地上升。 如果按照这样的增长速度，地球根本等不到什么太阳变成红巨星，直接将会在10亿年后被过高的温度烤炙地表，导致地表温度过高，液态水也无法再存在，可想而知，以液态水为生存必备条件之一的地球生命也将会走向灭绝。 当然，在10亿年以后生命无法存活的时候，如果人类还存在于地球上，那么我们必然已经想出了应对一切宇宙变化的解决办法。 毕竟人类的科技发展速度是众所周知的迅速，尽管在如今身处时代的洪流中的我们可能无法察觉到科技的变化速度，但是纵观人类历史，我们的科技飞速发展也才过去了短短几百年，却已经日新月异，这是在过去几十年的人们无法想到的盛景。\n\n    \n  \n\n\n  \n    \n      人类未来\n\n    \n    \n      到了未来，人类可能已经发展出了能在地下生存、利用各种元素制造水源，并且模拟水循环系统，能自行“创造”出一方小世界。 而在太阳即将迎来死亡，地球彻底终结之前，人类必然已经制造出了能星际航行的宇宙飞船，前往另外一颗更加适宜的类地行星，携带着地球本来的物种样本，在遥远的世界里发展出了第二颗“地球”。我们将无惧宇宙，将明白宇宙的一切发展规律，我们会长久地生存下去，直到宇宙熵增到终结。\n\n    \n  \n","categories":["科普"],"tags":["科普","宇宙","银河系","仙女座星系"]}]